diff --git a/colors/bg/blue.h b/colors/bg/blue.h
new file mode 100644
index 0000000..230e9f2
--- /dev/null
+++ b/colors/bg/blue.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#0077ff";
+static const char focus_br[]		= "#0077ff";
diff --git a/colors/bg/cyan.h b/colors/bg/cyan.h
new file mode 100644
index 0000000..4dffeb3
--- /dev/null
+++ b/colors/bg/cyan.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#00aaff";
+static const char focus_fg[]		= "#000000";
+static const char focus_br[]		= "#00aaff";
diff --git a/colors/bg/darkpink.h b/colors/bg/darkpink.h
new file mode 100644
index 0000000..d1370c3
--- /dev/null
+++ b/colors/bg/darkpink.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#e95678";
+static const char focus_br[]		= "#e95678";
diff --git a/colors/bg/orange.h b/colors/bg/orange.h
new file mode 100644
index 0000000..ca81b56
--- /dev/null
+++ b/colors/bg/orange.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#fe8b00";
+static const char focus_br[]		= "#fe8b00";
diff --git a/colors/bg/pink.h b/colors/bg/pink.h
new file mode 100644
index 0000000..1906f8d
--- /dev/null
+++ b/colors/bg/pink.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#ff77cc";
+static const char focus_br[]		= "#ff77cc";
diff --git a/colors/bg/purple.h b/colors/bg/purple.h
new file mode 100644
index 0000000..cf54331
--- /dev/null
+++ b/colors/bg/purple.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#cc77ff";
+static const char focus_br[]		= "#cc77ff";
diff --git a/colors/bg/red.h b/colors/bg/red.h
new file mode 100644
index 0000000..651b55f
--- /dev/null
+++ b/colors/bg/red.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#ff0000";
+static const char focus_br[]		= "#ff0000";
diff --git a/colors/bg/white.h b/colors/bg/white.h
new file mode 100644
index 0000000..539113e
--- /dev/null
+++ b/colors/bg/white.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#ffffff";
+static const char focus_br[]		= "#ffffff";
diff --git a/colors/bg/yellow.h b/colors/bg/yellow.h
new file mode 100644
index 0000000..537145f
--- /dev/null
+++ b/colors/bg/yellow.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#ffd500";
+static const char focus_fg[]		= "#000000";
+static const char focus_br[]		= "#ffd500";
diff --git a/colors/default.h b/colors/default.h
new file mode 100644
index 0000000..5d6d5c8
--- /dev/null
+++ b/colors/default.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#222222";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#bbbbbb";
+static const char focus_fg[]		= "#eeeeee";
+static const char focus_bg[]		= "#005577";
+static const char focus_br[]		= "#005577";
diff --git a/colors/dracula.h b/colors/dracula.h
new file mode 100644
index 0000000..df69c7b
--- /dev/null
+++ b/colors/dracula.h
@@ -0,0 +1,15 @@
+#define ACCENTCOLOR "#ffb86c"
+//#define ACCENTCOLOR "#ff79c6"
+//#define ACCENTCOLOR "#bd93f9"
+//#define ACCENTCOLOR "#d6acff"
+//#define ACCENTCOLOR "#50fa7b"
+//#define ACCENTCOLOR "#f1fa8c"
+//#define ACCENTCOLOR "#8be9fd"
+
+static const char normal_bg[]	= "#1e1f29";
+static const char normal_br[]	= "#1e1f29";
+static const char normal_fg[]	= "#f8f8f2";
+//static const char focus_bg[]	= "#3b4048";
+static const char focus_bg[]	= ACCENTCOLOR;
+static const char focus_br[]	= ACCENTCOLOR;
+static const char focus_fg[]	= "#282a36";
diff --git a/colors/fg/blue.h b/colors/fg/blue.h
new file mode 100644
index 0000000..2711920
--- /dev/null
+++ b/colors/fg/blue.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#0077ff";
+static const char focus_br[]		= "#0077ff";
diff --git a/colors/fg/cyan.h b/colors/fg/cyan.h
new file mode 100644
index 0000000..a595eb5
--- /dev/null
+++ b/colors/fg/cyan.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#00aaff";
+static const char focus_br[]		= "#00aaff";
diff --git a/colors/fg/darkpink.h b/colors/fg/darkpink.h
new file mode 100644
index 0000000..1883871
--- /dev/null
+++ b/colors/fg/darkpink.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#e95678";
+static const char focus_br[]		= "#e95678";
diff --git a/colors/fg/orange.h b/colors/fg/orange.h
new file mode 100644
index 0000000..2d6e303
--- /dev/null
+++ b/colors/fg/orange.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#fe8b00";
+static const char focus_br[]		= "#fe8b00";
diff --git a/colors/fg/pink.h b/colors/fg/pink.h
new file mode 100644
index 0000000..a1e6f94
--- /dev/null
+++ b/colors/fg/pink.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#ff77cc";
+static const char focus_br[]		= "#ff77cc";
diff --git a/colors/fg/purple.h b/colors/fg/purple.h
new file mode 100644
index 0000000..353349c
--- /dev/null
+++ b/colors/fg/purple.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#cc77ff";
+static const char focus_br[]		= "#cc77ff";
diff --git a/colors/fg/red.h b/colors/fg/red.h
new file mode 100644
index 0000000..8396d00
--- /dev/null
+++ b/colors/fg/red.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#ff0000";
+static const char focus_br[]		= "#ff0000";
diff --git a/colors/fg/white.h b/colors/fg/white.h
new file mode 100644
index 0000000..e9c1a99
--- /dev/null
+++ b/colors/fg/white.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_bg[]		= "#000000";
+static const char focus_fg[]		= "#ffffff";
+static const char focus_br[]		= "#ffffff";
diff --git a/colors/fg/yellow.h b/colors/fg/yellow.h
new file mode 100644
index 0000000..6aaf911
--- /dev/null
+++ b/colors/fg/yellow.h
@@ -0,0 +1,6 @@
+static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#ffd500";
+static const char focus_br[]		= "#ffd500";
diff --git a/colors/new-scheme.lua b/colors/new-scheme.lua
new file mode 100755
index 0000000..7c7d0a8
--- /dev/null
+++ b/colors/new-scheme.lua
@@ -0,0 +1,80 @@
+#!/bin/lua5.4
+--  _  _
+-- | || | github: hossein-lap
+-- | __ | email:  hosteam01@gmail.com
+-- |_||_| matrix: hosaidenpwd:matrix.org
+--
+
+function help()
+	io.stderr:write("Create new colorscheme", "\n\n",
+			"Usage: ", arg[0], " <color-name> <hex-color>", "\n",
+			"\n", "\t",
+			"exmaple: \n\n\t", "$ ", arg[0], " cyan 00ffff \n",
+			"\n", "Run without argument for help page.",
+			"\n")
+end
+
+if arg[2] == nil then
+	if arg[1] == nil then
+		help()
+		os.exit(-1)
+	else
+		help()
+		os.exit(3)
+	end
+end
+
+function file_exists(name)
+	local f = io.open(name, "r")
+	if f ~= nil then
+	   io.close(f)
+	   return true
+	else
+	   return false
+	end
+end
+
+local color = arg[2]
+
+local normals = [[static const char normal_bg[]		= "#000000";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#999999";
+]]
+
+local focus_br = [[static const char focus_br[]		= "#]] .. color .. [[";]]
+
+local b_focus_bg = [[static const char focus_bg[]		= "#]] .. color .. [[";]]
+local b_focus_fg = [[static const char focus_fg[]		= "#000000";]]
+local f_focus_fg = [[static const char focus_bg[]		= "#]] .. color .. [[";]]
+local f_focus_bg = [[static const char focus_fg[]		= "#000000";]]
+
+---- main
+local bg = 'bg/' .. arg[1] .. '.h'
+local fg = 'fg/' .. arg[1] .. '.h'
+--
+--
+if file_exists(bg) and file_exists(fg) then
+	io.write("Colors exists\n",
+			'\t', fg, '\n',
+			'\t\27[0;3m', bg, '\27[0m\n',
+			"Abroting\n")
+	return 1
+else
+
+	print("Colorscheme created")
+
+	local fg_file = assert(io.open (fg, 'w'))
+		fg_file:write(normals)
+		fg_file:write(f_focus_bg, '\n')
+		fg_file:write(f_focus_fg, '\n')
+		fg_file:write(focus_br, '\n')
+	fg_file:close()
+
+	local bg_file = io.open (bg, 'w')
+		bg_file:write(normals)
+		bg_file:write(b_focus_bg, '\n')
+		bg_file:write(b_focus_fg, '\n')
+		bg_file:write(focus_br, '\n')
+	bg_file:close()
+	return 0
+end
diff --git a/colors/solarized-dark.h b/colors/solarized-dark.h
new file mode 100644
index 0000000..f957ab5
--- /dev/null
+++ b/colors/solarized-dark.h
@@ -0,0 +1,15 @@
+#define ACCENTCOLOR "#b58900"
+//#define ACCENTCOLOR "#859900"
+//#define ACCENTCOLOR "#268bd2"
+//#define ACCENTCOLOR "#6c71c4"
+//#define ACCENTCOLOR "#d33682"
+//#define ACCENTCOLOR "#eee8d5"
+
+static const char normal_fg[]		= "#fdf6e3";
+static const char normal_bg[]		= "#002b36";
+static const char normal_br[]		= "#002b36";
+static const char focus_bg[]		= "#073642";
+static const char focus_br[]		= ACCENTCOLOR;
+static const char focus_fg[]		= ACCENTCOLOR;
+
+//static const char focus_bg[]		= "#073642";
diff --git a/colors/tokyo.h b/colors/tokyo.h
new file mode 100644
index 0000000..5190464
--- /dev/null
+++ b/colors/tokyo.h
@@ -0,0 +1,8 @@
+static const char normal_bg[]		= "#1b181f";
+//static const char normal_bg[]		= "#000000";
+static const char normal_fg[]		= "#71647f";
+static const char normal_br[]		= "#272833";
+//static const char focus_bg[]		= "#000000";
+static const char focus_bg[]		= "#242230";
+static const char focus_fg[]		= "#fd0000";
+static const char focus_br[]		= "#eeedf0";
diff --git a/colors/ubuntu.h b/colors/ubuntu.h
new file mode 100644
index 0000000..0e6b2ed
--- /dev/null
+++ b/colors/ubuntu.h
@@ -0,0 +1,7 @@
+static const char normal_bg[]		= "#2d0922";
+static const char normal_br[]		= "#444444";
+static const char normal_fg[]		= "#eeeeec";
+static const char focus_fg[]		= "#000000";
+static const char focus_bg[]		= "#ff7700";
+static const char focus_br[]		= "#E95420";
+//static const char focus_br[]		= "#B43C12";
diff --git a/config.def.h b/config.def.h
index 9efa774..ec612f4 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,34 +1,54 @@
 /* See LICENSE file for copyright and license details. */
 
+/* vars */
+#define SCRIPTSPATH "~/.local/dev/hossein-lap/workflow/scripts/"
+
+static const char term[]		= "st";
+static const char fileman[]		= "lfub";
+static const char browser[]		= "firefox";
+static const char muspley[]		= "cmus";
+static const char rssread[]		= "newsboat";
+static const char bdterm[]		= "lxterminal";
+
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 2;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const char *fonts[]          = {
+	"Fira Code:size=14",
+	"Noto Color Emoji:pixelsize=10:antialias=true:autohint=true"
+};
+static const char dmenufont[]       = { "Fira Code:size=14" };
+
+/* colorschemes */
+#include "colors/dracula.h"
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm]	= { normal_fg, normal_bg, normal_br },
+	[SchemeSel]	= { focus_fg, focus_bg, focus_br },
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = {
+//	"1", "2", "3", "4", "5", "6", "7", "8", "9"
+//	"a", "b", "c", "d", "e", "f", "g", "h", "i"
+//	"", "", "", "", "磊", "ﳲ", "", "", ""
+	"♠", "♠", "♠", "♥", "♥", "♥", "♣", "♣", "♣" 
+};
 
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class       instance    title       tags mask     isfloating   monitor */
+	{ "Gimp",      NULL,        NULL,         0,            1,           -1 },
+	{ "st",        NULL,        "Terminal",   0,            1,           -1 },
+	{ "Nsxiv",     "nsxiv",     "nsxiv",      0,            1,           -1 },
+	{ "Sxiv",      "sxiv",      "sxiv",       0,            1,           -1 },
+	{ "Firefox",   NULL,        NULL,         1 << 2,       0,           -1 },
+	{ "Telegram",  NULL,        NULL,         1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
@@ -40,8 +60,8 @@ static const int lockfullscreen = 1; /* 1 will force focus on the fullscreen win
 static const Layout layouts[] = {
 	/* symbol     arrange function */
 	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
+	{ "><>",      NULL },    /* no layout function means floating behavior */
 };
 
 /* key definitions */
@@ -57,13 +77,60 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[]	= {
+	"dmenu_run", "-p", "run", "-m", dmenumon,
+		"-fn", dmenufont, "-nb", normal_bg, "-nf", normal_fg,
+		"-sb", focus_bg, "-sf", focus_fg,
+	NULL
+};
 static const char *termcmd[]  = { "st", NULL };
+/* hos custom {{{ */
+static const char *tabbdcmd[]	= { "tabbed", "-c", "-k", "-r", "2", "st", "-w", "''", NULL };
+//static const char *takenote[]	= { "st", "-t", "Terminal", "sh", "-c", SCRIPTSPATH"notetake.sh", NULL};
+static const char *bidicmd[]	= { bdterm, NULL};
+static const char *filecmd[]	= { term, "-t", fileman, fileman, NULL};
+static const char *newsboat[]	= { term, "-t", "Newsboat", rssread, NULL};
+static const char *muscmd[]	= { "sh", "-c", SCRIPTSPATH"cmustmux.sh", NULL};
+static const char *wwwcmd[]	= { browser, NULL};
+/* change brightness */
+static const char *brightu[]	= { "brightnessctl", "s", "+5\%", NULL};
+static const char *brightd[]	= { "brightnessctl", "s", "5\%-", NULL};
+static const char *takenote[]	= { "sh", "-c", SCRIPTSPATH"mdtodo.sh",  NULL};
+static const char *floatcmd[]	= { "sh", "-c", SCRIPTSPATH"dmstexec.sh", NULL};
+static const char *dmshot[]	= { "sh", "-c", SCRIPTSPATH"dmshot.sh", NULL};
+static const char *dmkill[]	= { "sh", "-c", SCRIPTSPATH"dmkill.sh", NULL};
+static const char *dmsrun[]	= { "sh", "-c", SCRIPTSPATH"dmsrun.sh", NULL};
+static const char *dmusbd[]	= { "sh", "-c", SCRIPTSPATH"dmusb.sh",  NULL};
+static const char *dmchar[]	= { "sh", "-c", SCRIPTSPATH"dmchar.sh",  NULL};
+static const char *scrn_lock[]	= { "slock", NULL};
+static const char *emclient[]	= { "emacsclient", "-c", "-a", "emacs", NULL};
+static const char *sysbtop[]	= { term, "btop", NULL};
+/* }}}*/
 
 static const Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	/* hos custom {{{ */
+	{ MODKEY|ShiftMask,		XK_Return,	spawn,		{.v = termcmd	} },
+	{ MODKEY|ShiftMask,		XK_t,		spawn,		{.v = tabbdcmd	} },
+	{ MODKEY,			XK_x,		spawn,		{.v = floatcmd	} },
+	{ MODKEY|ControlMask,		XK_t,		spawn,		{.v = bidicmd	} },
+	{ 0,				XK_Print,	spawn,		{.v = dmshot	} },
+	{ MODKEY|ShiftMask,		XK_k,		spawn,		{.v = dmkill	} },
+	{ MODKEY,			XK_r,		spawn,		{.v = dmsrun	} },
+	{ MODKEY|ShiftMask,		XK_d,		spawn,		{.v = dmusbd	} },
+	{ MODKEY|ShiftMask,		XK_a,		spawn,		{.v = dmchar	} },
+	{ MODKEY|ShiftMask,		XK_l,		spawn,		{.v = scrn_lock	} },
+	{ MODKEY|ShiftMask,		XK_f,		spawn,		{.v = filecmd	} },
+	{ MODKEY|ShiftMask,		XK_b,		spawn,		{.v = wwwcmd	} },
+	{ MODKEY|ShiftMask,		XK_m,		spawn,		{.v = muscmd	} },
+	{ MODKEY|ShiftMask,		XK_n,		spawn,		{.v = newsboat	} },
+	{ MODKEY|ControlMask,		XK_Delete,	spawn,		{.v = sysbtop	} },
+	{ MODKEY,			XK_n,		spawn,		{.v = takenote	} },
+	{ MODKEY,			XK_e,		spawn,		{.v = emclient	} },
+	{ MODKEY,			XK_p,		spawn,		{.v = dmenucmd	} },
+	{ MODKEY,			XK_Up,		spawn,		{.v = brightu	} },
+	{ MODKEY,			XK_Down,	spawn,		{.v = brightd	} },
+	/* }}}*/
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
@@ -75,8 +142,8 @@ static const Key keys[] = {
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[2]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
